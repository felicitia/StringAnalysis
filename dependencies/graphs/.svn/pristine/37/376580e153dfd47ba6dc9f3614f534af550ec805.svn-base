package edu.usc.sql.graphs;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import soot.toolkits.graph.BriefUnitGraph;
import edu.usc.sql.graphs.cdg.CDG;
import edu.usc.sql.graphs.cfg.CFGInterface;
import edu.usc.sql.graphs.cfg.SootCFG;

public class CDGTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		//Test program to build CFG from a class and generate Dominance, Post Dominance and CDG of individual nodes
		
		
		Map<String, CFGInterface> cfgMap = new HashMap<String, CFGInterface>();
		 
		 cfgMap = SootCFG.buildCFGs("/home/django/workspace/ControlFlowGraph/bin/", "hw/Subject3.class"); 
		 
		 
		 System.out.println(cfgMap.values());
		 
		 CFGInterface cfg = cfgMap.get("<hw.Subject3: void main(java.lang.String[])>");
		 
		 System.out.println(cfg.getAllEdges());
		 System.out.println(cfg.getAllNodes());
	
		
		
		
		

//		Graph g = new Graph();
//		
//		GraphTest gt = new GraphTest();
//		
//		g=gt.copyGraph();
//		
//		System.out.println(g.getAllEdges());
//		System.out.println(g.getAllNodes());
//		
//		//CFGInterface cfg = (CFGInterface) g;
//		
//		//System.out.println(cfg.getExitNode());
//		
//		Node ExitNode =null;
//		
//		Set<NodeInterface> Nodes = g.getAllNodes();
//		
//		for(NodeInterface Itrnode:Nodes)
//		{
//			if(Itrnode.getOutEdges().isEmpty())
//			{
//				ExitNode=(Node) Itrnode;
//				System.out.println("Exit node:"+ExitNode.getName());
//			}
//		}
//		
//		
//		CDG TestCDG = new CDG(g.getAllNodes(),g.getAllEdges(),ExitNode);
//		
		
		
	}

}
